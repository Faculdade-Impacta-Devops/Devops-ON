name: pipeline

on:
  push:

jobs:
  analyze:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'java' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  unit-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: mvn test
      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2.11.0
      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco/

  code-analisys:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=macieleds_Devops-ON

  build:
    runs-on: ubuntu-latest
    needs: code-analisys
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Package
        run: mvn package

  deploy-STG:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: stg

    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy
        shell: bash
        run: |
          echo "Deploy STG"

  Smoketest:
    runs-on: ubuntu-latest
    needs: deploy-STG

    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run: |
          sh 'src/main/scripts/smoketest.sh'

  testeIntegrados:
    runs-on: ubuntu-latest
    needs: Smoketest

    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run: |
          sh 'src/main/scripts/testeIntegrado.sh'

  deploy-Pre:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release'
    environment:
      name: pre
    needs: build
    steps:
      - name: Deploy
        shell: bash
        run: |
          echo "Deploy PRE"

  SmoketestPre:
    runs-on: ubuntu-latest
    needs: deploy-Pre

    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run: |
          sh 'src/main/scripts/smoketest.sh'          

  testeFuncionais:
    runs-on: ubuntu-latest
    needs: SmoketestPre

    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run: |
          sh 'src/main/scripts/testesFuncionais.sh'  

  deploy-Prod:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
    needs: build
    steps:
      - name: Deploy
        shell: bash
        run: |
          echo "Deploy PROD" 
